{"version":3,"sources":["webpack:///./src/budget/budget.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sCAAgB;AACzC,kBAAkB,mBAAO,CAAC,wCAAiB;AAC3C,wBAAwB,mBAAO,CAAC,kEAAuB;AACvD,kBAAkB,mBAAO,CAAC,wBAAS;AACnC,wBAAwB,mBAAO,CAAC,kEAAuB;AACvD,0BAA0B,mBAAO,CAAC,gEAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,mBAAmB;AAC/H,wHAAwH,MAAM;AAC9H,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+CAA+C,SAAS;AACxD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,SAAS;AAC7E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,2CAA2C,YAAY,kCAAkC,YAAY;AACrG;AACA,aAAa;AACb;AACA;AACA,2FAA2F,YAAY,SAAS,cAAc,oCAAoC,SAAS;AAC3K;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.70062dc45b61f12293dd.hot-update.js","sourcesContent":["\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"@nestjs/common\");\r\nconst typeorm_1 = require(\"@nestjs/typeorm\");\r\nconst budget_entity_1 = require(\"./enity/budget.entity\");\r\nconst typeorm_2 = require(\"typeorm\");\r\nconst action_entity_1 = require(\"./enity/action.entity\");\r\nconst response_entity_1 = require(\"../utils/response.entity\");\r\nlet BudgetService = class BudgetService {\r\n    constructor(budgetRepository, actionRepository) {\r\n        this.budgetRepository = budgetRepository;\r\n        this.actionRepository = actionRepository;\r\n    }\r\n    createBudget(userPayload, budgetDTO) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const budget = this.budgetRepository.create(budgetDTO);\r\n            budget.userId = userPayload.userId;\r\n            budget.openDate = budget.openDate ? budget.openDate : new Date();\r\n            return this.budgetRepository.save(budget)\r\n                .then(createdBudget => response_entity_1.ResponseEntityFor.successWith(`Budget with name '${createdBudget.name}' was created succesfuly`))\r\n                .catch(error => response_entity_1.ResponseEntityFor.failureWith(`Failed to create budget with error: '${error}'`));\r\n        });\r\n    }\r\n    getBudgets(userPayload) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let bugets = yield this.getBudgetsByUserId(userPayload.userId);\r\n            return response_entity_1.ResponseEntityFor.successWith(bugets);\r\n        });\r\n    }\r\n    getBudgetsByUserId(userId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.budgetRepository.find({ userId });\r\n        });\r\n    }\r\n    performAction(userPayload, actionDTO, budgetId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let action = this.actionRepository.create(actionDTO);\r\n            action.budgetId = budgetId;\r\n            action.timeStamp = new Date();\r\n            console.log(action);\r\n            console.log(budgetId);\r\n            return this.getBudgetsByUserId(userPayload.userId)\r\n                .then(budgets => budgets.filter(budget => budget.id === budgetId))\r\n                .then(budgetsById => {\r\n                if (budgetsById.length > 1) {\r\n                    return budgetsById[0];\r\n                }\r\n                else {\r\n                    throw Error(`User does not have Budget by id '${budgetId}' and cannot perform actions`);\r\n                }\r\n            })\r\n                .then(budget => {\r\n                if (this.canActionBePerfomed(action, budget)) {\r\n                    return budget;\r\n                }\r\n                else {\r\n                    throw Error(`Action '${action.type}' cannot be perfomed to Budget '${budget.name}'`);\r\n                }\r\n            })\r\n                .then(budget => this.saveBudget(budget))\r\n                .then(budget => this.saveAction(action))\r\n                .then(action => response_entity_1.ResponseEntityFor.successWith(`Action '${action.type}' for '${action.amount}' where perfomed on Budget by id '${budgetId}'`))\r\n                .catch(error => response_entity_1.ResponseEntityFor.failureWith(error));\r\n        });\r\n    }\r\n    saveBudget(budget) {\r\n        return this.budgetRepository.save(budget);\r\n    }\r\n    saveAction(action) {\r\n        return this.actionRepository.save(action);\r\n    }\r\n    canActionBePerfomed(action, budget) {\r\n        if (action.type === action_entity_1.ActionType.WITHDRAW) {\r\n            return budget.balance >= action.amount && action.amount >= 0;\r\n        }\r\n        else if (action.type == action_entity_1.ActionType.DEPOSIT) {\r\n            return action.amount > 0;\r\n        }\r\n        return false;\r\n    }\r\n};\r\nBudgetService = __decorate([\r\n    common_1.Injectable(),\r\n    __param(0, typeorm_1.InjectRepository(budget_entity_1.Budget)),\r\n    __param(1, typeorm_1.InjectRepository(action_entity_1.Action)),\r\n    __metadata(\"design:paramtypes\", [typeorm_2.Repository,\r\n        typeorm_2.Repository])\r\n], BudgetService);\r\nexports.BudgetService = BudgetService;\r\n"],"sourceRoot":""}